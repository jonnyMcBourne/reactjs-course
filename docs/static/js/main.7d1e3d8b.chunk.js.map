{"version":3,"sources":["2.-gifExpertApp/components/AddCategory.js","2.-gifExpertApp/components/GiffCard.js","2.-gifExpertApp/components/ListOfGiffs.js","2.-gifExpertApp/components/GiffApp.js","2.-gifExpertApp/api/useFetch.js","App.js","reportWebVitals.js","index.js"],"names":["AddCategory","setCategory","useState","inputState","setInputState","onSubmit","e","preventDefault","type","id","name","placeholder","onChange","target","value","GiffCard","giff","title","img","className","style","backgroundImage","ListOfGiffs","categories","map","GiffApp","category","setCategories","url","URL","getGiffs","params","api_key","limit","q","search","URLSearchParams","toString","fetch","then","resp","json","data","x","images","downsized_large","flat","useFetch","useEffect","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAE5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAaF,OACI,8BACE,uBAAMC,SARU,SAACC,GACnBA,EAAEC,iBACFN,EAAYE,GACZC,EAAc,KAKZ,UAEI,uBACEI,KAAK,OACLC,GAAG,WACHC,KAAK,WACLC,YAAY,cACZC,SApBe,SAACN,GACxB,IAAQO,EAAWP,EAAXO,OACRT,EAAcS,EAAOC,QAmBbA,MAAOX,IAGX,uBAAOK,KAAK,SAASE,KAAK,YAAYI,MAAM,c,OC5BvCC,G,MAAW,SAAC,GAAY,IAAXC,EAAU,EAAVA,KACfC,EAAYD,EAAZC,MAAMC,EAAMF,EAANE,IACb,OACE,uBAAMC,UAAU,gEAAhB,UACE,qBAAKC,MAAO,CAACC,gBAAgB,OAAD,OAAQH,EAAR,MAAiBC,UAAU,QAEvD,oBAAIA,UAAU,QAAd,SAAwBF,SCHnBK,G,MAAc,SAAC,GAAqB,IAAD,IAAnBC,kBAAmB,MAAR,GAAQ,EAC5C,OACE,qBAAKJ,UAAU,gBAAf,SACGI,EAAWC,KAAI,SAACR,GAAD,OACZ,cAAC,WAAD,UACA,cAAC,EAAD,CAAUA,KAAMA,KADDA,EAAKP,W,OCHnBgB,EAAU,WAErB,MAAgCvB,mBAAS,IAAzC,mBAAOwB,EAAP,KAAiBzB,EAAjB,KACA,ECPsB,WAEpB,MAAmCC,mBAAS,IAA5C,mBAAOqB,EAAP,KAAkBI,EAAlB,KAEMC,EAAM,IAAIC,IAAI,wCA+BpB,MAAO,CAACN,aAAWO,SA7BF,SAACJ,GAEhB,IAAIK,EAAS,CACbC,QAAS,mCACTC,MAAO,KACPC,EAAE,GAAD,OAAKR,IAGRE,EAAIO,OAAS,IAAIC,gBAAgBL,GAAQM,WAGvCC,MAAMV,GAAKW,MAAK,SAACC,GACfA,EAAKC,OAAOF,MAAK,YAAe,IAAZG,EAAW,EAAXA,KAClBf,EACE,CACEe,EAAKlB,KAAI,SAACmB,GACR,MAAO,CACLlC,GAAIkC,EAAElC,GACNQ,MAAO0B,EAAE1B,MACTC,IAAKyB,EAAEC,OAAOC,gBAAgBjB,SALpC,mBAQKL,IACHuB,gBDtBkBC,GAAvBxB,EAAP,EAAOA,WAAWO,EAAlB,EAAkBA,SAQlB,OANAkB,qBAAU,WACS,KAAbtB,GACFI,EAASJ,KAEX,CAACA,IAGD,gCACE,4CACA,uBACA,cAAC,EAAD,CAAazB,YAAaA,IAC1B,cAAC,EAAD,CAAasB,WAAYA,QEZhB0B,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7d1e3d8b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport const AddCategory = ({ setCategory }) => {\n\n  const [inputState, setInputState] = useState(\"\");\n\n  const onChangeCategory = (e) => {\n    const { target } = e;\n    setInputState(target.value);\n  };\n\n  const addCategory = (e) => {\n    e.preventDefault();\n    setCategory(inputState)\n    setInputState(\"\");\n  };\n  \nreturn (\n    <div>\n      <form onSubmit={addCategory}>\n\n          <input\n            type=\"text\"\n            id=\"category\"\n            name=\"category\"\n            placeholder=\"placeholder\"\n            onChange={onChangeCategory}\n            value={inputState}\n          />\n\n        <input type=\"submit\" name=\"addbutton\" value=\"Add\" />\n\n      </form>\n    </div>\n  );\n};\n","import React from 'react'\nimport './giffCard.css'\nexport const GiffCard = ({giff}) => {\n    const {title,img}= giff\n    return (\n      <span className=\"container img-thumbnail animate__animated animate__fadeInLeft\" >\n        <div style={{backgroundImage:`url(${img})`}} className=\"img\" >\n        </div>\n        <h4 className=\"title\" >{title}</h4>\n      </span>\n    );\n}\n","import React from 'react'\nimport { Fragment } from 'react/cjs/react.production.min'\nimport {GiffCard} from './GiffCard'\nimport './listOfGiffs.css'\n\nexport const ListOfGiffs = ({categories=[]}) => {\n    return (\n      <div className=\"listContainer\">\n        {categories.map((giff) => (\n            <Fragment key={giff.id}>\n            <GiffCard giff={giff} />\n            </Fragment>\n        ))}\n      </div>\n    );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./index.css\";\nimport { AddCategory } from \"./AddCategory\";\nimport { ListOfGiffs } from \"./ListOfGiffs\";\nimport {useFetch} from '../api/useFetch';\n\nexport const GiffApp = () => {\n  \n  const [category, setCategory] = useState(\"\");\n  const {categories,getGiffs} = useFetch(category);\n\n  useEffect(() => {\n    if (category !== \"\") {\n      getGiffs(category)\n    }\n  },[category]);\n\n  return (\n    <div>\n      <h1>GiffExpert</h1> \n      <hr />\n      <AddCategory setCategory={setCategory} />\n      <ListOfGiffs categories={categories}/>\n    </div>\n  );\n};\n","import { useState } from \"react\";\n\nexport const useFetch = () => {\n\n    const [categories,setCategories] = useState([]);\n\n    const url = new URL(\"https://api.giphy.com/v1/gifs/search\");\n\n    const getGiffs = (category) => {\n    \n      var params = {\n      api_key: \"za7As88APho69VcPk6t9PW2nrHzeSb60\",\n      limit: \"12\",\n      q: `${category}`,\n    };\n\n    url.search = new URLSearchParams(params).toString();\n\n    \n      fetch(url).then((resp) => {\n        resp.json().then(({ data }) => {\n          setCategories(\n            [\n              data.map((x) => {\n                return {\n                  id: x.id,\n                  title: x.title,\n                  img: x.images.downsized_large.url,\n                };\n              }),\n              ...categories,\n            ].flat()\n          );\n        });\n      });\n    };\n\n    return {categories,getGiffs};\n  };","//import { CounterAppParent } from './components/CounterApp/CounterAppParent';\nimport {GiffApp} from './2.-gifExpertApp/components/GiffApp'\nfunction App() {\n  return (\n    <div>\n      <GiffApp/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}